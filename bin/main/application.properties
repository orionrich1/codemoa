spring.application.name=final-project

spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#JPA 설정

#Database 
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=12345678

#MyBatis
mybatis.type-aliases-package=com.codemoa.project.domain
mybatis.mapper-locations=classpath:mappers/**/*Mapper.xml
mybatis.configuration.map-underscore-to-camel-case=true

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

spring.devtools.remote.restart.enabled=false
spring.devtools.livereload.enabled=true

spring.thymeleaf.cache=false

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB

spring.servlet.multipart.file-size-threshold=1MB
spring.servlet.multipart.enabled=true
server.tomcat.max-part-count=50
server.tomcat.max-part-header-size=2048

#API 키, SNS 관련 키 받아오기
spring.config.import=optional:secret.properties

# Tomcat 업로드 파트 제한 완화
server.tomcat.max-swallow-size=-1

# 임시 url 사용을 위한 설정
server.forward-headers-strategy=framework

# 구글 OAuth2 클라이언트 설정
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email


spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
	

# 카카오 OAuth2 클라이언트 설정
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.provider=kakao
spring.security.oauth2.client.registration.kakao.scope=

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

file.upload.dir=uploads/

api.key=asd

GOOGLE_CLIENT_ID=asd
GOOGLE_CLIENT_SECRET=asd


KAKAO_CLIENT_ID=asd

